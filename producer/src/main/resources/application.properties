# Restcontroller
server.port=8080

# RabbitMQ
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username= guest
spring.rabbitmq.password= guest

#spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.
#spring.rabbitmq.cache.channel.checkout-timeout= # Number of milliseconds to wait to obtain a channel if the cache size has been reached.
#spring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.
#spring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.
#spring.rabbitmq.cache.connection.size= # Number of connections to cache.
#spring.rabbitmq.connection-timeout= # Connection timeout, in milliseconds; zero for infinite.
#spring.rabbitmq.dynamic=true # Create an AmqpAdmin bean.
#spring.rabbitmq.listener.simple.acknowledge-mode= # Acknowledge mode of container.
#spring.rabbitmq.listener.simple.auto-startup=true # Start the container automatically on startup.
#spring.rabbitmq.listener.simple.concurrency= # Minimum number of consumers.
#spring.rabbitmq.listener.simple.default-requeue-rejected= # Whether or not to requeue delivery failures; default `true`.
#spring.rabbitmq.listener.simple.idle-event-interval= # How often idle container events should be published in milliseconds.
#spring.rabbitmq.listener.simple.max-concurrency= # Maximum number of consumers.
#spring.rabbitmq.listener.simple.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).
#spring.rabbitmq.listener.simple.retry.enabled=false # Whether or not publishing retries are enabled.
#spring.rabbitmq.listener.simple.retry.initial-interval=1000 # Interval between the first and second attempt to deliver a message.
#spring.rabbitmq.listener.simple.retry.max-attempts=3 # Maximum number of attempts to deliver a message.
#spring.rabbitmq.listener.simple.retry.max-interval=10000 # Maximum interval between attempts.
#spring.rabbitmq.listener.simple.retry.multiplier=1.0 # A multiplier to apply to the previous delivery retry interval.
#spring.rabbitmq.listener.simple.retry.stateless=true # Whether or not retry is stateless or stateful.
#spring.rabbitmq.listener.simple.transaction-size= # Number of messages to be processed in a transaction. For best results it should be less than or equal to the prefetch count.
#spring.rabbitmq.publisher-confirms=false # enable publisher confirms.
#spring.rabbitmq.publisher-returns=false # enable publisher returns.
#spring.rabbitmq.requested-heartbeat= # requested heartbeat timeout, in seconds; zero for none.
#spring.rabbitmq.ssl.enabled=false # enable ssl support.
#spring.rabbitmq.ssl.key-store= # path to the key store that holds the ssl certificate.
#spring.rabbitmq.ssl.key-store-password= # password used to access the key store.
#spring.rabbitmq.ssl.trust-store= # trust store that holds ssl certificates.
#spring.rabbitmq.ssl.trust-store-password= # password used to access the trust store.
#spring.rabbitmq.ssl.algorithm= # ssl algorithm to use. by default configure by the rabbit client library.
#spring.rabbitmq.template.mandatory=false # enable mandatory messages.
#spring.rabbitmq.template.receive-timeout=0 # timeout for `receive()` methods.
#spring.rabbitmq.template.reply-timeout=5000 # timeout for `sendandreceive()` methods.
#spring.rabbitmq.template.retry.enabled=false # set to true to enable retries in the `rabbittemplate`.
#spring.rabbitmq.template.retry.initial-interval=1000 # interval between the first and second attempt to publish a message.
#spring.rabbitmq.template.retry.max-attempts=3 # maximum number of attempts to publish a message.
#spring.rabbitmq.template.retry.max-interval=10000 # maximum number of attempts to publish a message.
#spring.rabbitmq.template.retry.multiplier=1.0 # a multiplier to apply to the previous publishing retry interval.